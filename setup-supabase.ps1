# Script PowerShell para configurar o banco Supabase
# Execute com: .\setup-supabase.ps1

Write-Host "===============================================" -ForegroundColor Cyan
Write-Host "    RIDEC Time Control - Supabase Setup" -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Cyan
Write-Host ""

# Configura√ß√µes do Supabase
$SUPABASE_HOST = "aws-1-sa-east-1.pooler.supabase.com"
$SUPABASE_PORT = "5432"
$SUPABASE_DB = "postgres"
$SUPABASE_USER = "postgres.fphyoywhgelrxtjfovmz"
$SUPABASE_PASSWORD = "n40-M3-l3mbr0"

Write-Host "Configura√ß√µes do Supabase:" -ForegroundColor Yellow
Write-Host "- Host: $SUPABASE_HOST" -ForegroundColor White
Write-Host "- Porta: $SUPABASE_PORT" -ForegroundColor White
Write-Host "- Database: $SUPABASE_DB" -ForegroundColor White
Write-Host "- Usuario: $SUPABASE_USER" -ForegroundColor White
Write-Host ""

# Verificar se o arquivo SQL existe
if (-not (Test-Path "create_database_supabase.sql")) {
    Write-Host "‚ùå ERRO: Arquivo create_database_supabase.sql n√£o encontrado!" -ForegroundColor Red
    Write-Host "Certifique-se de que o arquivo est√° no mesmo diret√≥rio deste script." -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

Write-Host "‚úÖ Arquivo SQL encontrado!" -ForegroundColor Green
Write-Host ""

# Verificar se psql est√° dispon√≠vel
try {
    $psqlVersion = & psql --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ PostgreSQL encontrado: $psqlVersion" -ForegroundColor Green
    } else {
        throw "psql n√£o encontrado"
    }
} catch {
    Write-Host "‚ùå ERRO: PostgreSQL (psql) n√£o encontrado!" -ForegroundColor Red
    Write-Host ""
    Write-Host "Para instalar o PostgreSQL:" -ForegroundColor Yellow
    Write-Host "1. Baixe em: https://www.postgresql.org/download/windows/" -ForegroundColor White
    Write-Host "2. Durante a instala√ß√£o, certifique-se de adicionar ao PATH" -ForegroundColor White
    Write-Host "3. Reinicie o PowerShell ap√≥s a instala√ß√£o" -ForegroundColor White
    Write-Host ""
    Write-Host "Alternativamente, voc√™ pode:" -ForegroundColor Yellow
    Write-Host "- Usar o painel web do Supabase para executar o SQL" -ForegroundColor White
    Write-Host "- Usar uma ferramenta como pgAdmin" -ForegroundColor White
    Write-Host ""
    Read-Host "Pressione Enter para sair"
    exit 1
}

Write-Host ""

# Confirmar execu√ß√£o
$confirm = Read-Host "Deseja executar o script de configura√ß√£o? (s/n)"
if ($confirm -ne "s" -and $confirm -ne "S") {
    Write-Host "Opera√ß√£o cancelada." -ForegroundColor Yellow
    Read-Host "Pressione Enter para sair"
    exit 0
}

Write-Host ""
Write-Host "üöÄ Executando script de configura√ß√£o..." -ForegroundColor Cyan
Write-Host ""

# Definir vari√°vel de ambiente para senha
$env:PGPASSWORD = $SUPABASE_PASSWORD

# Executar o script SQL
try {
    $result = & psql -h $SUPABASE_HOST -p $SUPABASE_PORT -U $SUPABASE_USER -d $SUPABASE_DB -f "create_database_supabase.sql" 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "===============================================" -ForegroundColor Green
        Write-Host "    BANCO CONFIGURADO COM SUCESSO!" -ForegroundColor Green
        Write-Host "===============================================" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìä Resumo da configura√ß√£o:" -ForegroundColor Yellow
        Write-Host "- 15 tabelas criadas/verificadas" -ForegroundColor White
        Write-Host "- 12 √≠ndices criados/verificados" -ForegroundColor White
        Write-Host "- 2 views criadas/atualizadas" -ForegroundColor White
        Write-Host "- 2 fun√ß√µes criadas/atualizadas" -ForegroundColor White
        Write-Host "- 16 triggers criados" -ForegroundColor White
        Write-Host "- RLS habilitado para seguran√ßa" -ForegroundColor White
        Write-Host ""
        Write-Host "üéâ Configura√ß√£o conclu√≠da!" -ForegroundColor Green
        Write-Host ""
        Write-Host "Para conectar ao banco:" -ForegroundColor Yellow
        Write-Host "psql -h $SUPABASE_HOST -p $SUPABASE_PORT -U $SUPABASE_USER -d $SUPABASE_DB" -ForegroundColor White
        Write-Host ""
    } else {
        throw "Erro na execu√ß√£o do script"
    }
} catch {
    Write-Host ""
    Write-Host "===============================================" -ForegroundColor Red
    Write-Host "    ERRO AO CONFIGURAR BANCO!" -ForegroundColor Red
    Write-Host "===============================================" -ForegroundColor Red
    Write-Host ""
    Write-Host "Erro: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "Verifique:" -ForegroundColor Yellow
    Write-Host "- Se as credenciais est√£o corretas" -ForegroundColor White
    Write-Host "- Se a conex√£o com a internet est√° funcionando" -ForegroundColor White
    Write-Host "- Se o arquivo SQL est√° correto" -ForegroundColor White
    Write-Host ""
}

# Limpar vari√°vel de ambiente
Remove-Item Env:PGPASSWORD -ErrorAction SilentlyContinue

Write-Host ""
Read-Host "Pressione Enter para sair"
